{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAM,EAAwB,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EADF,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAEnD,GAAG,CAAC,SAAC,CADR,EACiB,OAAA,EAAK,WAAW,AAC9B,GAAA,GAAG,CAAC,SAAC,CAAL,EAAa,OAAA,EAAI,KAAK,CAAC,IACvB,GAAA,GAAG,CAAC,SAAC,CAAL,EAAgB,OAAA,EAAO,GAAG,CAAC,SAAC,CAAZ,EAAoB,OAAA,OAAO,QAAQ,CAAC,CAAC,GAAM,EAAK,G,EAChE,GAAA,GAAG,CAAC,SAAC,CAAL,EAAa,MAAA,CAAC,EAAI,IAAI,CAAC,G,GAEpB,EAAQ,EAAsB,MAAM,CAAC,SAAC,CAAA,CAAK,CAAjD,EAAuD,OAAA,EAAM,CAAG,EAAA,GAE1D,EAAU,EAAQ,EAAsB,MAAM,CAQpD,SAAS,EAAsB,CAAK,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAU,IACxC,EAAM,EAAE,CAoBd,OAFA,AAbA,SAAS,EAAkB,CAAG,EAC5B,IAAI,EAAI,SAER,AAAI,EAAI,GACN,EAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EARZ,IAWD,EAFP,EAAI,KAAK,KAAK,CAAC,EATP,KAaD,EAAI,OAAO,EAEtB,EAbe,OAAO,QAAQ,CAAC,CAAC,GAAS,CAAC,EAAQ,GAiB3C,EAAI,IAAI,CAAC,IAClB,CA5BA,SAAS,aAAa,CAAC,qBAAqB,WAAW,CACrD,EAAsB,GAExB,SAAS,aAAa,CAAC,uBAAuB,WAAW,CACvD,EAAsB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar arrayPopulation = _to_consumable_array(document.querySelectorAll(\".population\"));\nvar arrayPopulationNumber = arrayPopulation.map(function(item) {\n    return item.textContent;\n}).map(function(str) {\n    return str.split(\",\");\n}).map(function(arrStr) {\n    return arrStr.map(function(el) {\n        return Number.isFinite(+el) ? el : \"0\";\n    });\n}).map(function(arr) {\n    return +arr.join(\"\");\n});\nvar total = arrayPopulationNumber.reduce(function(sum, n) {\n    return sum + n;\n}, 0);\nvar average = total / arrayPopulationNumber.length;\ndocument.querySelector(\".total-population\").textContent = convertNumberToString(total);\ndocument.querySelector(\".average-population\").textContent = convertNumberToString(average);\nfunction convertNumberToString(value) {\n    var bitness = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1000;\n    var arr = [];\n    var bit = bitness;\n    var number = Number.isFinite(+value) ? +value : 0;\n    function getArrayRemainder(num) {\n        var n = num;\n        if (n > 0) {\n            arr.push(Math.floor(n % bit));\n            n = Math.floor(n / bit);\n            return getArrayRemainder(n);\n        } else return arr.reverse();\n    }\n    getArrayRemainder(number);\n    return arr.join(\",\");\n}\n\n//# sourceMappingURL=index.4948a8d6.js.map\n","'use strict';\n\nconst arrayPopulation = [...document.querySelectorAll('.population')];\nconst arrayPopulationNumber = arrayPopulation\n  .map((item) => item.textContent)\n  .map((str) => str.split(','))\n  .map((arrStr) => arrStr.map((el) => (Number.isFinite(+el) ? el : '0')))\n  .map((arr) => +arr.join(''));\n\nconst total = arrayPopulationNumber.reduce((sum, n) => sum + n, 0);\n\nconst average = total / arrayPopulationNumber.length;\n\ndocument.querySelector('.total-population').textContent =\n  convertNumberToString(total);\n\ndocument.querySelector('.average-population').textContent =\n  convertNumberToString(average);\n\nfunction convertNumberToString(value, bitness = 1000) {\n  const arr = [];\n  const bit = bitness;\n\n  const number = Number.isFinite(+value) ? +value : 0;\n\n  function getArrayRemainder(num) {\n    let n = num;\n\n    if (n > 0) {\n      arr.push(Math.floor(n % bit));\n      n = Math.floor(n / bit);\n\n      return getArrayRemainder(n);\n    } else {\n      return arr.reverse();\n    }\n  }\n\n  getArrayRemainder(number);\n\n  return arr.join(',');\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","arrayPopulationNumber","arrayPopulation","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","map","item","textContent","str","split","arrStr","el","Number","isFinite","join","total","reduce","sum","average","convertNumberToString","value","bitness","arguments","getArrayRemainder","num","push","Math","floor","reverse","querySelector"],"version":3,"file":"index.4948a8d6.js.map"}